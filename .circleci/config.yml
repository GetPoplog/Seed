# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
jobs:
  one_line_install:
    machine:
      image: ubuntu-1604:202104-01
    steps:
      - run:
          command: |
            curl -LsS https://raw.githubusercontent.com/GetPoplog/Seed/main/GetPoplog.sh | sh
  build_tree:
    machine:
      image: ubuntu-1604:202104-01
    steps:
      - checkout
      - run:
          name: Get system info
          command: |
            uname -a
            ldd --version
      - run:
          name: Install dependencies
          command: sudo make jumpstart-ubuntu
      - run:
          name: Build poplog_base file-tree
          command: make build
      - run:
          name: TEST - Install Poplog
          command: sudo make install
      - run:
          name: TEST - Verify installation
          command: make verify-install
      - run:
          name: TEST - Uninstall Poplog
          command: sudo make uninstall
      - run:
          name: TEST - Verify uninstallation
          command: make verify-uninstall
      - run:
          name: Export file-tree as tarball
          command: make _build/poplog.tar.gz
      - store_artifacts:
          path: _build/poplog.tar.gz
          destination: poplog.tar.gz
      - persist_to_workspace:
          root: _build
          paths:
            - Done.proxy
            - poplog.tar.gz
  build_deb:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - run:
          name: Get system info
          command: |
            uname -a
            ldd --version
      - run:
          command: |
            sudo apt update
            sudo apt install -y make curl
      - attach_workspace:
          at: _build
      - run:
          command: |
            make builddeb POPLOG_HOME_DIR=/opt/poplog
            mkdir -p _build/artifacts
            mv _build/poplog_16.1-1_amd64.deb _build/artifacts/
      - store_artifacts:
          path: _build/artifacts/poplog_16.1-1_amd64.deb
          destination: poplog_16.1-1_amd64.deb
      - persist_to_workspace:
          root: _build
          paths:
            - artifacts/poplog_16.1-1_amd64.deb
  test_deb_1604:
    machine:
      image: ubuntu-1604:202104-01
    steps: &systests_steps
      - checkout
      - run:
          name: Get system info
          command: |
            uname -a
            ldd --version
      - run:
          name: Install dependencies
          command: |
            sudo apt update
            sudo apt install -y python3 python3-pip
            pip3 install nose2
      - attach_workspace:
          at: ./_build
      - run:
          name: Install Poplog from *.deb file
          command: |
            sudo apt install ./_build/artifacts/poplog_16.1-1_amd64.deb
      - run:
          name: Run systests
          command: |
            cd systests
            nose2 -X
      - store_test_results:
          path: systests

  test_deb_2004:
    machine:
      image: ubuntu-2004:202104-01
    steps: *systests_steps

  build_rpm:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - when:
          condition: false
          steps:
            - run:
                name: Get system info
                command: |
                  uname -a
                  ldd --version
            - attach_workspace:
                at: _build
            - run:
                command: |
                  sudo apt update
                  sudo apt install -y make alien curl
            - run:
                command: |
                  make buildrpm
            - store_artifacts:
                path: _build/poplog-16.1-1.x86_64.rpm
                destination: poplog-16.1-1.x86_64.rpm
  build_appimage:
    machine:
      image: ubuntu-1604:202104-01
    steps:
      - checkout
      - run:
          name: Get system info
          command: |
            uname -a
            ldd --version
      - attach_workspace:
          at: _build
      - run:
          command: |
            sudo apt update
            sudo apt install -y make curl libncurses5 libncurses5-dev
      - run:
          command: |
            make buildappimage POPLOG_HOME_DIR=/opt/poplog
            mkdir -p _build/artifacts
            mv _build/Poplog-x86_64.AppImage _build/artifacts/
      - store_artifacts:
          path: _build/artifacts/Poplog-x86_64.AppImage
          destination: Poplog-x86_64.AppImage
      - persist_to_workspace:
          root: _build
          paths:
            - artifacts/Poplog-x86_64.AppImage
  build_snap:
    docker:
      - image: cibuilds/snapcraft:core20
    steps:
      - checkout
      - run:
          name: Get system info
          command: |
            uname -a
            ldd --version
      - run:
          name: Get system info
          command: uname -a
      - attach_workspace:
          at: _build
      - run:
          command: |
            sudo apt update
            sudo apt install make 
      - run:
          command: |
            make buildsnapcraftready POPLOG_HOME_DIR=/opt/poplog
            pushd _build/dotsnap; snapcraft; popd
            mkdir -p _build/artifacts
            mv _build/dotsnap/poplog_16.0.1_amd64.snap _build/artifacts/
      - store_artifacts:
          path: _build/artifacts/poplog_16.0.1_amd64.snap
          destination: poplog_16.0.1_amd64.snap
      - persist_to_workspace:
          root: _build
          paths:
            - artifacts/poplog_16.0.1_amd64.snap
  build_poplog_seccomp:
    docker:
      - image: cimg/python:3.9.6
    steps:
      - run:
          name: "Generate security profile for Poplog"
          command: |
            sudo apt update 
            sudo apt install -y wget
            cd docker
            make build
      - persist_to_workspace:
          root: _build
          paths:
            - artifacts/poplog_seccomp.json
  publish_github_release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./_build
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t "${GITHUB_TOKEN}" -u "${CIRCLE_PROJECT_USERNAME}" -r "${CIRCLE_PROJECT_REPONAME}" -c "${CIRCLE_SHA1}" -delete "${CIRCLE_TAG}" ./_build/artifacts/
default_filters: &default_filters
  # required to run on tagged releases.
  tags:
    only: /.*/

workflows:
  version: 2
  mainflow:
    jobs:
      - build_poplog_seccomp:
          filters:  *default_filters
      - one_line_install:
          filters:  *default_filters
      - build_tree:
          filters:  *default_filters
      - build_deb:
          requires:
            - build_tree
          filters:  *default_filters
      - build_rpm:
          requires:
            - build_tree
          filters:  *default_filters
      - build_appimage:
          requires:
            - build_tree
          filters:  *default_filters
      - build_snap:
          requires:
            - build_tree
          filters:  *default_filters
      - test_deb_1604:
          requires:
            - build_deb
          filters:  *default_filters
      - test_deb_2004:
          requires:
            - build_deb
          filters:  *default_filters
      - publish_github_release:
          requires:
            - test_deb_1604
            - test_deb_2004
            - build_appimage
            - build_snap
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+.*$/
